name: Test create-release (use-upload)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: GitHub Tag to release. ex) 1.1.0"
        required: true
        default: ""
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  update-packagejson:
    uses: ./.github/workflows/update-packagejson.yaml
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
      file-path: |
        ./Sandbox/Sandbox.Unity/Assets/Plugins/Foo/package.json
        ./Sandbox/Sandbox.Godot/addons/Foo/plugin.cfg
      tag: "${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.0.{0}', github.run_id) }}"
      dry-run: false
      use-upload: true

  setup-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    defaults:
      run:
        working-directory: ./Sandbox
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dotnet
      - name: dotnet restore
        run: dotnet restore
      - name: dotnet build
        run: dotnet build -c Release
      - name: dotnet pack
        run: dotnet pack -c Release --no-build
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: ./Sandbox/ClassLibrary/bin/Release/*.nupkg
          retention-days: 1

  create-release:
    needs: [update-packagejson, setup-dotnet]
    uses: ./.github/workflows/create-release.yaml
    with:
      commit-id: ''
      tag: "${{ github.event_name == 'workflow_dispatch' && inputs.tag || format('1.0.{0}', github.run_id) }}"
      dry-run: true # Release作成後に60秒待って削除される。
      nuget-push: true # dry-run なので pushはされない。
      unitypackage-upload: true # Releaseにアップロードされる。
      unitypackage-path: "./Sandbox/Sandbox.Unity/output/Sandbox.Unity.unitypackage"

  cleanup:
    if: ${{ needs.update-packagejson.outputs.is-branch-created == 'true' }}
    needs: [update-packagejson]
    uses: ./.github/workflows/clean-packagejson-branch.yaml
    with:
      branch: ${{ needs.update-packagejson.outputs.branch-name }}
