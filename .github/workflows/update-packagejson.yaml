name: (R) Update package.json

on:
  workflow_call:
    inputs:
      file-path:
        description: "package.json path to update. You can input multiline paths. Supported files are `package.json`, `plugin.cfg` and `Directory.Build.props`"
        required: true
        type: string
      ref:
        description: "checkout ref"
        required: false
        type: string
        default: ''
      require-validation:
        description: "true require validation must pass, false to keep going even validation failed."
        required: false
        type: boolean
        default: true
      tag:
        description: "git tag you want create. (sample 1.0.0)"
        required: true
        type: string
      dry-run:
        description: "true to simularate commit but not push change."
        required: true
        type: boolean
      dotnet-run-path:
        description: "dotnet run path, executable should output desired change. (sample: src/Foo/Bar.csproj)"
        required: false
        type: string
        default: ''
      # TODO: Obsolete, this field can be removed after reference removed.
      push-tag:
        description: "true = push tag. false = no push tag."
        required: false
        type: boolean
        default: true
    outputs:
      branch-name:
        description: Git branch name created.
        value: ${{ jobs.update-packagejson.outputs.branch-name }}
      is-branch-created:
        description: Indicate is Git branch created or not.
        value: ${{ jobs.update-packagejson.outputs.is-branch-created }}
      sha:
        description: "Git commit sha after package.json has changed."
        value: ${{ jobs.update-packagejson.outputs.sha }}

permissions:
  contents: write
  actions: read

jobs:
  update-packagejson:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      branch-name: ${{ steps.update.outputs.branch-name }}
      is-branch-created: ${{ steps.update.outputs.is-branch-created }}
      sha: ${{ steps.update.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: 9.0.x
      - name: Set Cysharp/Actions binary path
        id: actions-caller
        run: |
          if [[ -d "${{ github.workspace }}/../../_actions/Cysharp/Actions" ]]; then
            echo path="${{ github.workspace }}/../../_actions/Cysharp/Actions/main/actions/CysharpActions.exe" | tee -a "$GITHUB_OUTPUT"
          else
            echo path="dotnet run --project ./src/CysharpActions/CysharpActions.csproj --no-launch-profile --" | tee -a "$GITHUB_OUTPUT"
          fi

      # validate
      - name: Validate and normalize tag
        id: validate
        run: ${{ steps.actions-caller.outputs.path }} validate-tag --tag "${{ inputs.tag }}" ${{ inputs.require-validation && '--require-validation' || '' }}
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # dotnet run external
      - name: Execute external dotnet run with --version ${{ steps.validate.outputs.normalized-tag }}
        run: |
          while read -r file_path; do
            if [[ "$file_path" == "" ]]; then continue; fi
            echo "Start $file_path"
            echo "::group::Execute"
              dotnet run --project "$file_path" --no-launch-profile -- --version "${{ steps.validate.outputs.normalized-tag }}"
            echo "::endgroup::"
          done <<< "${{ inputs.dotnet-run-path }}"
        if: ${{ inputs.dotnet-run-path != '' }}

      # package.json
      # "version": 1.2.3 -> "version": 2.0.0
      # plugin.cfg
      # version="1.2.3" -> version="2.0.0"
      #
      # TIPS: Converting file-oath from \n to ,
      - name: Update files to version ${{ steps.validate.outputs.normalized-tag }}
        id: update
        run: ${{ steps.actions-caller.outputs.path }} update-version --version "${{ steps.validate.outputs.normalized-tag }}" --path-string "${{ inputs.file-path }}" ${{ inputs.dry-run &&  '--dry-run' || '' }}

      - name: Push changes
        if: ${{ steps.update.outputs.commited == '1' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # auto generated token
          branch: ${{ steps.update.outputs.branch-name || inputs.ref }}
          tags: false
          force: ${{ inputs.dry-run }}
