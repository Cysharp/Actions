name: Test check-metas

on:
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/check-metas
        id: check-metas
        with:
          directory: "Sandbox/Sandbox.Unity"
          exit-on-error: false
      # Any actions that create .meta when it was not comitted.
      - name: Unity Build
        run: touch ./Sandbox/Sandbox.Unity/Assets/Scene1.unity.meta
      - uses: ./.github/actions/check-metas
        id: check-metas2
        with:
          directory: "Sandbox/Sandbox.Unity"
          exit-on-error: false
      - name: Test
        run: |
          echo "DEBUG: check-metas: ${{ steps.check-metas.outputs.meta-exists }}"
          echo "DEBUG: check-metas2: ${{ steps.check-metas.outputs.meta-exists }}"

          echo -n "FACT: check-metas .meta not exists. "
          if [[ "${{ steps.check-metas.outputs.meta-exists }}" != "true" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi
          echo -n "FACT: check-metas2 .meta exists. "
          if [[ "${{ steps.check-metas2.outputs.meta-exists }}" == "true" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi
      - uses: ./.github/actions/check-metas
        id: check-metas3
        with:
          directory: "Sandbox/Sandbox.Unity"
          exit-on-error: true
        continue-on-error: true
      - name: Test on .meta found exit 1
        if: always()
        run: |
          echo "DEBUG: check-metas3: ${{ steps.check-metas3.outputs.meta-exists }}"
          echo "DEBUG: outcome: ${{ steps.check-metas3.outcome }}"

          echo -n "FACT: check-metas3 .meta exists. "
          if [[ "${{ steps.check-metas3.outputs.meta-exists }}" == "true" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi

          echo -n "FACT: check-metas3 successfully failed (exit 1) on .meta found. "
          if [[ "${{ steps.check-metas3.outcome }}" == "failure" ]]; then echo "[O PASS]"; else echo "[X FAIL]" && exit 1; fi
