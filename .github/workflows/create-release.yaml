name: (R) Create Release

on:
  workflow_dispatch:
    inputs:
      commit-id:
        description: "commit-id: CommitId to create release & tag."
        required: false
        type: string
      dry-run:
        description: "dry-run: true = no upload. false = dry run changes && delete release after 60s."
        required: true
        type: boolean
      require-validation:
        description: "require-validation: true require validation must pass, false to keep going even validation failed."
        required: false
        type: boolean
        default: true
      tag:
        description: "tag: Git tag to create. (sample 1.0.0)"
        required: true
        type: string
      # nuget
      nuget-push:
        description: "nuget-push: true = upload nuget package. false = not upload"
        required: false
        type: boolean
        default: false
      # release
      release-asset-path:
        description: "release assets path to upload. This is a list of paths separated by a newline."
        required: false
        type: string
      release-format: # see: https://docs.github.com/en/actions/learn-github-actions/expressions#format
        description: "release-format: if 'Ver.{0}' is specified, the release title will be 'Ver.1.0.0'. set '{0}' if no prefix is preferred."
        required: false
        type: string
        default: "v{0}"
      release-upload:
        description: "release-upload: true = upload assets. false = not upload"
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      commit-id:
        description: "CommitId to create release & tag."
        required: true
        type: string
      dry-run:
        description: "true = no upload. false = dry run changes && delete release after 60s."
        required: true
        type: boolean
      require-validation:
        description: "true require validation must pass, false to keep going even validation failed."
        required: false
        type: boolean
        default: true
      tag:
        description: "Git tag to create. (sample 1.0.0)"
        required: true
        type: string
      # nuget
      nuget-path:
        description: "nuget path to upload."
        required: false
        type: string
        default: |
          ./nuget/*.nupkg
          ./nuget/*.snupkg
      nuget-push:
        description: "true = upload nuget package. false = not upload"
        required: false
        type: boolean
        default: false
      # release
      release-asset-path:
        description: "release assets path to upload. This is a list of paths separated by a newline."
        required: false
        type: string
      release-format: # see: https://docs.github.com/en/actions/learn-github-actions/expressions#format
        description: "Release format. (if 'Ver.{0}' is specified, the release title will be 'Ver.1.0.0'. set '{0}' if no prefix is preferred.)"
        required: false
        type: string
        default: "v{0}"
      release-upload:
        description: "true = upload assets. false = not upload"
        required: false
        type: boolean
        default: false

env:
  GH_REPO: ${{ github.repository }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-release:
    name: Create Release
    permissions:
      contents: write # required for creating release
      id-token: write # required for NuGet Trusted Publish
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Validate inputs - unitypackage
        shell: bash
        if: ${{ inputs.release-upload && inputs.release-asset-path == '' }}
        run: |
          echo "Validation error! 'inputs.release-asset-path' cannot be blank when 'inputs.release-upload' is true."
          exit 1

      - name: Load secrets
        id: op-load-secret
        uses: 1password/load-secrets-action@13f58eec611f8e5db52ec16247f58c508398f3e6 # v3.0.0
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN_PUBLIC }}
          NUGET_KEY: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/NUGET_KEY/credential"
          # NUGET_USER: "op://${{ vars.OP_VAULT_ACTIONS_PUBLIC }}/NUGET_KEY/username"

      # 2025/10/1: NuGet Trusted Publish for Org is not yet supported.
      # - name: NuGet login (OIDC â†’ temp API key)
      #   if: ${{ inputs.nuget-push }}
      #   uses: NuGet/login@d22cc5f58ff5b88bf9bd452535b4335137e24544 # v1.1.0
      #   id: login
      #   with:
      #     user: ${{ steps.op-load-secret.outputs.NUGET_USER }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.commit-id }}
          persist-credentials: false
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: 9.0.x
      - name: Set Cysharp/Actions binary path
        id: actions-caller
        run: |
          branch=main
          if [[ -f "${{ github.workspace }}/../../_actions/Cysharp/Actions/${branch}/actions/Linux-${{ runner.arch }}/CysharpActions" ]]; then
            echo path="${{ github.workspace }}/../../_actions/Cysharp/Actions/${branch}/actions/Linux-${{ runner.arch }}/CysharpActions" | tee -a "$GITHUB_OUTPUT"
            chmod +x "${{ github.workspace }}/../../_actions/Cysharp/Actions/${branch}/actions/Linux-${{ runner.arch }}/CysharpActions"
          else
            echo path="dotnet run --project ./src/CysharpActions/CysharpActions.csproj --no-launch-profile --" | tee -a "$GITHUB_OUTPUT"
          fi

      # validate
      - name: Validate and normalize tag
        id: validate
        run: ${{ steps.actions-caller.outputs.path }} validate-tag --tag "${{ inputs.tag }}" ${{ inputs.require-validation && '--require-validation' || '' }}

      # Download(All) Artifacts to current directory
      - uses: Cysharp/Actions/.github/actions/download-artifact@main
      - name: Show download aritifacts
        run: ls -lR
      - name: Validate package exists in artifact - release assets
        if: ${{ inputs.release-upload }}
        run: ${{ steps.actions-caller.outputs.path }} validate-file-exists --path-pattern-string "${{ inputs.release-asset-path }}"
      - name: Validate package exists in artifact - NuGet
        if: ${{ inputs.nuget-push }}
        run: ${{ steps.actions-caller.outputs.path }} validate-nupkg-exists --path-pattern-string "${{ inputs.nuget-path }}"

      # Create Releases
      - name: Create Release
        run: ${{ steps.actions-caller.outputs.path }} create-release --tag "${{ inputs.tag }}" --release-title "${{ format(inputs.release-format, inputs.tag) }}" --release-asset-path-string "${{ inputs.release-asset-path }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}

      # Upload to NuGet
      - name: Upload to NuGet (DryRun=${{ inputs.dry-run }})
        if: ${{ inputs.nuget-push }}
        run: ${{ steps.actions-caller.outputs.path }} nuget-push --nuget-path-string "${{ inputs.nuget-path }}" --api-key "${NUGET_KEY}" ${{ inputs.dry-run && '--dry-run' || '' }}
        env:
          NUGET_KEY: ${{ steps.op-load-secret.outputs.NUGET_KEY }}
      # 2025/10/1: NuGet Trusted Publish for Org is not yet supported.
      # run: ${{ steps.actions-caller.outputs.path }} nuget-push --nuget-path-string "${{ inputs.nuget-path }}" --api-key "${NUGET_KEY}" ${{ inputs.dry-run && '--dry-run' || '' }}
      # env:
      #   NUGET_KEY: ${{ steps.login.outputs.NUGET_API_KEY }}

      # Clean up
      - name: Clean up. Wait 60s and delete release if dry-run or failure. (dry-run=${{ inputs.dry-run }}})
        if: ${{ inputs.dry-run || failure() }}
        run: |
          if gh release list | grep Draft | grep ${{ inputs.tag }}; then
            sleep 60
            gh release delete ${{ inputs.tag }} --yes --cleanup-tag
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
